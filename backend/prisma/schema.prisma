// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comment {
  id        String   @id @default(uuid())
  authorId  String
  content   String
  createdAt DateTime @default(now())
  postId    String
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: NoAction)
}

model Post {
  id        String    @id @default(uuid())
  authorId  String
  content   String?
  createdAt DateTime  @default(now())
  Comment   Comment[]
  Like      Like[]
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
}

model Profile {
  userId     String  @id @unique
  avatar     String? @default("")
  background String? @default("")
  bio        String? @default("")
  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Like {
  id        String   @id @default(uuid())
  authorId  String
  createdAt DateTime @default(now())
  postId    String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: NoAction)
}

model Country {
  id         String @id @default(uuid())
  flag_emoji String
  flag_svg   String
  name_eng   String
  name_pol   String
  phone_code String
  users      User[]
}

model User {
  id          String    @id @default(uuid())
  countryId   String
  createdAt   DateTime  @default(now())
  dateOfBirth DateTime
  email       String    @unique
  lastName    String
  name        String
  password    String
  phoneNumber String    @unique
  Comment     Comment[]
  Country     Country   @relation(fields: [countryId], references: [id], onDelete: NoAction)
  Like        Like[]
  posts       Post[]
  profile     Profile?
  role        Role      @default(USER)
}

enum Role {
  ADMIN
  USER
}
